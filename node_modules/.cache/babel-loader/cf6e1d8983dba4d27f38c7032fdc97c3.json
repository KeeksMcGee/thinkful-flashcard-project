{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livel\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditDeck({\n  setUpdate,\n  update\n}) {\n  _s();\n\n  //Need to add local state for form updates\n  const {\n    deckId = null\n  } = useParams();\n  const history = useHistory();\n  const [deckCurrent, setDeckCurrent] = useState({\n    name: \"\",\n    description: \"\"\n  });\n\n  const handleDeckData = ({\n    target\n  }) => setDeckCurrent({ ...deckCurrent,\n    [target.name]: target.value\n  });\n\n  const abortController = new AbortController();\n  useEffect(() => {\n    if (deckId !== null) {\n      readDeck(deckId, abortController.signal).then(setDeckCurrent).catch(err => console.log(err));\n    }\n\n    return () => abortController.abort();\n  }, [deckId]);\n\n  function reloadData() {\n    setUpdate(!update);\n  }\n\n  const submitDeck = () => {\n    updateDeck({ ...deckCurrent\n    }, abortController.signal).then(reloadData()).then(history.push(`/decks/${deckId}`)).catch(err => console.log(err));\n    return () => abortController.abort();\n  };\n\n  if (deckCurrent !== undefined) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        navData: [\"Edit Deck\", deckCurrent]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"d-flex col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"d-flex col\",\n            placeholder: \"Deck Name\",\n            name: \"name\",\n            value: deckCurrent.name,\n            onChange: handleDeckData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"d-flex col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"d-flex col\",\n            placeholder: \"Brief description of the deck\",\n            name: \"description\",\n            value: deckCurrent.description,\n            onChange: handleDeckData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        type: \"button\",\n        className: \"btn btn-secondary m-1\",\n        to: `/decks/${deckId}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"oi oi-circle-x m-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), \"Cancel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-1\",\n        onClick: submitDeck,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"oi oi-circle-check m-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), \"Submit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(EditDeck, \"VTyOmmxx2RjM2ZEz3eRp8M1I17Y=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/livel/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/EditDeck.js"],"names":["React","Fragment","useEffect","useState","Link","useParams","useHistory","readDeck","updateDeck","NavBar","EditDeck","setUpdate","update","deckId","history","deckCurrent","setDeckCurrent","name","description","handleDeckData","target","value","abortController","AbortController","signal","then","catch","err","console","log","abort","reloadData","submitDeck","push","undefined"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck, updateDeck } from \"../utils/api\";\nimport NavBar from \"./NavBar\";\n\nexport default function EditDeck({ setUpdate, update }) {\n  //Need to add local state for form updates\n  const {deckId = null} = useParams();\n  const history = useHistory();\n  const [deckCurrent, setDeckCurrent] = useState({ name: \"\", description: \"\"});\n  \n  \n  const handleDeckData = ({ target }) => \n  setDeckCurrent({...deckCurrent, [target.name]: target.value });\n     const abortController = new AbortController();\n  \n  useEffect(() => {\n \n    if (deckId !== null) {\n      readDeck(deckId, abortController.signal)\n        .then(setDeckCurrent)\n        .catch((err) => console.log(err));\n    }\n    return () => abortController.abort();\n  }, [deckId]);\n  \n  function reloadData() {\n    setUpdate(!update);\n  }\n  \n  const submitDeck = () => {\n    updateDeck({...deckCurrent}, abortController.signal)\n    .then(reloadData())\n      .then(history.push(`/decks/${deckId}`))\n    .catch((err) => console.log(err));\n    return () => abortController.abort();\n  };\n  \n    if (deckCurrent !== undefined) {\n    return (\n      <Fragment>\n          <NavBar navData={[\"Edit Deck\", deckCurrent]} />\n        <h2>Edit Deck</h2>\n        <form>\n          <div className=\"form-group\">\n            <label className=\"d-flex col\">Name</label>\n            <textarea\n              className=\"d-flex col\"\n              placeholder=\"Deck Name\"\n              name=\"name\"\n              value={deckCurrent.name}\n              onChange={handleDeckData}\n            ></textarea>\n          </div>\n          <div className=\"form-group\">\n            <label className=\"d-flex col\">Description</label>\n            <textarea\n              className=\"d-flex col\"\n              placeholder=\"Brief description of the deck\"\n              name=\"description\"\n              value={deckCurrent.description}\n              onChange={handleDeckData}\n            ></textarea>\n          </div>\n        </form>\n        <Link\n          type=\"button\"\n          className=\"btn btn-secondary m-1\"\n          to={`/decks/${deckId}`}\n        >\n          <span className=\"oi oi-circle-x m-1\" />\n          Cancel\n        </Link>\n        <button className=\"btn btn-primary m-1\" onClick={submitDeck}>\n          <span className=\"oi oi-circle-check m-1\" />\n          Submit\n        </button>\n      </Fragment>\n    );\n  } else {\n    return null;\n  }\n}"]},"metadata":{},"sourceType":"module"}