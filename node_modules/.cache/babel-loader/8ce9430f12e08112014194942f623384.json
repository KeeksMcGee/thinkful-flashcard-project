{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\livel\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Study() {\n  _s();\n\n  const [cardState, setCardState] = useState([true, 0]);\n  const [deckCurrent, editDeckCurrent] = useState();\n  const {\n    url\n  } = useRouteMatch();\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(editDeckCurrent).catch(err => console.log(err));\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (deckCurrent === undefined) {\n    return null;\n  } else {\n    const studyDecline = `You need at least 3 cards to study. There are ${deckCurrent.cards.length} cards in this deck.`;\n    const studyConfirm = `Restart cards?\\n\\nClick 'cancel' to return to the home page.`;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        navData: [\"Study\", deckCurrent]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Study: \", deckCurrent.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), deckCurrent.cards.length < 3 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Not enough cards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: studyDecline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn btn-primary\",\n            to: `/decks/${deckId}/cards/new`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-plus m-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), \"Add Cards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [\"Card \", `${cardState[1] + 1} of ${deckCurrent.cards.length}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), cardState[0] ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: deckCurrent.cards[cardState[1]].front\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: deckCurrent.cards[cardState[1]].back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setCardState([!cardState[0], cardState[1]]),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-loop-circular m-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), \"Flip\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), !cardState[0] ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => {\n                if (cardState[1] === deckCurrent.cards.length - 1) {\n                  if (window.confirm(studyConfirm)) {\n                    setCardState([true, 0]);\n                  } else {\n                    history.push(\"/\");\n                  }\n                } else {\n                  setCardState([true, cardState[1] + 1]);\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-arrow-thick-right m-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), \"Next\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, cardState[1], false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Study, \"p0vExfzLoi2vgSU3DfpYMxlLDVU=\", false, function () {\n  return [useRouteMatch, useHistory, useParams];\n});\n\n_c = Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/livel/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/Study.js"],"names":["React","useState","useEffect","Fragment","Link","useParams","useHistory","useRouteMatch","readDeck","NavBar","Study","cardState","setCardState","deckCurrent","editDeckCurrent","url","history","deckId","abortController","AbortController","signal","then","catch","err","console","log","abort","undefined","studyDecline","cards","length","studyConfirm","name","front","back","window","confirm","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { Link, useParams, useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport { readDeck } from \"../utils/api\";\n\nimport NavBar from \"./NavBar\";\n\nexport default function Study() {\n  const [cardState, setCardState] = useState([true, 0]);\n  const [deckCurrent, editDeckCurrent] = useState();\n  const { url } = useRouteMatch();\n  const history = useHistory();\n  const { deckId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal)\n      .then(editDeckCurrent)\n      .catch((err) => console.log(err));\n    return () => abortController.abort();\n  }, [deckId]);\n\n  if (deckCurrent === undefined) {\n    return null;\n  } else {\n    const studyDecline = `You need at least 3 cards to study. There are ${deckCurrent.cards.length} cards in this deck.`;\n    const studyConfirm = `Restart cards?\\n\\nClick 'cancel' to return to the home page.`;\n\n    return (\n      <Fragment>\n        <NavBar navData={[\"Study\", deckCurrent]}/>\n        <section className=\"container\">\n          <h1>Study: {deckCurrent.name}</h1>\n          {deckCurrent.cards.length < 3 ? (\n            <div>\n              <h2>Not enough cards.</h2>\n              <p>{studyDecline}</p>\n              <Link\n                className=\"btn btn-primary\"\n                to={`/decks/${deckId}/cards/new`}\n              >\n                <span className=\"oi oi-plus m-1\" />\n                Add Cards\n              </Link>\n            </div>\n          ) : (\n            <div className=\"card\" key={cardState[1]}>\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  Card {`${cardState[1] + 1} of ${deckCurrent.cards.length}`}\n                </h5>\n                {cardState[0] ? (\n                  <p className=\"card-text\">\n                    {deckCurrent.cards[cardState[1]].front}\n                  </p>\n                ) : (\n                  <p className=\"card-text\">\n                    {deckCurrent.cards[cardState[1]].back}\n                  </p>\n                )}\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={() => setCardState([!cardState[0], cardState[1]])}\n                >\n                  <span className=\"oi oi-loop-circular m-1\" />\n                  Flip\n                </button>\n                {!cardState[0] ? (\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() => {\n                      if (cardState[1] === deckCurrent.cards.length - 1) {\n                        if (window.confirm(studyConfirm)) {\n                          setCardState([true, 0]);\n                        } else {\n                          history.push(\"/\");\n                        }\n                      } else {\n                        setCardState([true, cardState[1] + 1]);\n                      }\n                    }}\n                  >\n                    <span className=\"oi oi-arrow-thick-right m-1\" />\n                    Next\n                  </button>\n                ) : null}\n              </div>\n            </div>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}